user www-data;
worker_processes 1;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

error_log  /var/log/nginx/error.log error;

events {
    multi_accept on;
    worker_connections 1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 120;
    client_max_body_size 10m;

    #access_log /var/log/nginx/access.log;
    log_format ltsv "time:$time_local"    
                        "\thost:$remote_addr"    
                        "\tforwardedfor:$http_x_forwarded_for"    
                        "\treq:$request"    
                        "\tstatus:$status"    
                        "\tmethod:$request_method"    
                        "\turi:$request_uri"    
                        "\tsize:$body_bytes_sent"    
                        "\treferer:$http_referer"    
                        "\tua:$http_user_agent"    
                        "\treqtime:$request_time"    
                        "\tcache:$upstream_http_x_cache"    
                        "\truntime:$upstream_http_x_runtime"    
                        "\tapptime:$upstream_response_time"    
                        "\tvhost:$host";    
        
    access_log  /var/log/nginx/access.log ltsv;    
    error_log /var/log/nginx/error.log;    
        
    # logの停止    
    #access_log off;    
    #error_log /dev/null crit;

    # TLS configuration
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    #include conf.d/*.conf;
    #include sites-enabled/*.conf;
    upstream local {
        server 127.0.0.1:8000;
        # 渡すデータのサイズが大きい時はkeepaliveをonにしたほうが良い
        #keepalive 128;
    }
    
    
    upstream remote {
        server 172.24.89.55:8000;
        #server 172.24.89.56:8000;
        # 同じユーザーが何回も来るなど総接続ユーザー数が少ない時も増やすべき
        #keepalive 128;
    }
    server {
        listen 443 ssl;
        server_name isucon9.catatsuy.org;
    
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

	location = /favicon.ico {
            proxy_set_header Host $http_host;
	    root /home/isucon/isucari/webapp/public;
            expires 1d;
        }
        location ~ ^/(css|img|js)/ {
            proxy_set_header Host $http_host;
	    root /home/isucon/isucari/webapp/public;
            gzip_static always;
            gunzip on;
            expires 1d;
            # キャッシュをclientにもたせる
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    
        location /initialize { 
            proxy_set_header Host $http_host;
	    proxy_pass http://local;
        }   
        location /sell { 
            proxy_set_header Host $http_host;
	    proxy_pass http://local;
        }   
        location /upload/ { 
            proxy_set_header Host $http_host;
	    proxy_pass http://local;
        }   
        location / { 
            proxy_set_header Host $http_host;
            #proxy_pass http://127.0.0.1:8000;
	    proxy_pass http://remote;
        }   

	location @local {
            proxy_set_header Host $http_host;
            proxy_pass http://local;
        }
        location @remote {
            proxy_set_header Host $http_host;
            proxy_pass http://remote;
        }
    }
}
